    def localProperties = new Properties()
    def localPropertiesFile = rootProject.file('local.properties')
    if (localPropertiesFile.exists()) {
        localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
       }
    }

    def flutterRoot = localProperties.getProperty('flutter.sdk')
    if (flutterRoot == null) {
        throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
    }

    def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
    if (flutterVersionCode == null) {
        flutterVersionCode = '1'
    }

    def flutterVersionName = localProperties.getProperty('flutter.versionName')
    if (flutterVersionName == null) {
        flutterVersionName = '1.0'
    }

    apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
// END: FlutterFire Configuration
    apply plugin: 'kotlin-android'
    apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

    android {
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
    // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
    applicationId "com.mvc.sampling_machine_mobile_testing"
    // You can update the following values to match your application needs.
    // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
    minSdkVersion 23
    targetSdkVersion 34
    versionCode flutterVersionCode.toInteger()
    versionName flutterVersionName
   }
    signingConfigs {
        release {
            storeFile file('key_store/mvc_keystore')
            storePassword '12345678'
            keyAlias 'mvc'
            keyPassword '12345678'
        }
    }

    buildTypes {
    release {
    signingConfig signingConfigs.release
    shrinkResources false
    minifyEnabled false
    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    ///     work for run release
    ///     signingConfig signingConfigs.debug
    ///     shrinkResources false
    ///     minifyEnabled false
    ///     proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
   }
   debug {
    signingConfig signingConfigs.debug 
   }
  }
}

    dependencies {
        implementation 'androidx.appcompat:appcompat:1.6.1'
        implementation 'com.google.android.material:material:1.8.0'
        implementation 'io.github.xmaihh:serialport:2.1.1'
        implementation files('libs/PFUMobileDeviceSDK.jar')
        implementation files('libs/PFUSSMobileDeviceSDK.jar')
        implementation files('libs/PFUSSMobileDeviceSDK.jar')
    }

    flutter {
        source '../..'
    }
